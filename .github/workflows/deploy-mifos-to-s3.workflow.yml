name: Build and Deploy FineractUi to S3
on:
  workflow_dispatch:
  push:
    branches:
    - dev
    - staging
    - master
    - qa
env:
  AWS_REGION: "us-east-1"
  STACK_NAME: "velo"
  ZONE: "velocitycareerlabs.io"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      # Set Dev Environment
      - name: Set Dev environment
        if: github.ref == 'refs/heads/dev'
        run: |
          echo 'CLOUD_ENV=dev' >> $GITHUB_ENV
          sed -i 's|$AUTH0_SERVER_URL|${{ secrets.AUTH0_SERVER_URL_DEV }}|g' app/scripts/modules/configurations.js
          sed -i 's|$AUTH0_CLIENT_ID|${{ secrets.AUTH0_CLIENT_ID_DEV }}|g' app/scripts/modules/configurations.js
          sed -i 's|$AUTH0_CONNECTION_ID|${{ secrets.AUTH0_CONNECTION_ID_DEV }}|g' app/scripts/modules/configurations.js
          sed -i 's|$AUTH0_AUDIENCE|${{ secrets.AUTH0_AUDIENCE_DEV }}|g' app/scripts/modules/configurations.js
          sed -i 's|$FINERACT_BASE_URL|${{ secrets.FINERACT_BASE_URL_DEV }}|g' app/scripts/modules/configurations.js
      # Set QA Environment
      - name: Set QA environment
        if: github.ref == 'refs/heads/qa'
        run: |
          echo 'CLOUD_ENV=qa' >> $GITHUB_ENV
          sed -i 's|$AUTH0_SERVER_URL|${{ secrets.AUTH0_SERVER_URL_QA }}|g' app/scripts/modules/configurations.js
          sed -i 's|$AUTH0_CLIENT_ID|${{ secrets.AUTH0_CLIENT_ID_QA }}|g' app/scripts/modules/configurations.js
          sed -i 's|$AUTH0_CONNECTION_ID|${{ secrets.AUTH0_CONNECTION_ID_QA }}|g' app/scripts/modules/configurations.js
          sed -i 's|$AUTH0_AUDIENCE|${{ secrets.AUTH0_AUDIENCE_QA }}|g' app/scripts/modules/configurations.js
          sed -i 's|$FINERACT_BASE_URL|${{ secrets.FINERACT_BASE_URL_QA }}|g' app/scripts/modules/configurations.js          
      # Set Staging Environment
      - name: Set Staging Environment
        if: github.ref == 'refs/heads/staging'
        run: |
          echo 'CLOUD_ENV=staging' >> $GITHUB_ENV
          sed -i 's|$AUTH0_SERVER_URL|${{ secrets.AUTH0_SERVER_URL_STAGING }}|g' app/scripts/modules/configurations.js
          sed -i 's|$AUTH0_CLIENT_ID|${{ secrets.AUTH0_CLIENT_ID_STAGING }}|g' app/scripts/modules/configurations.js
          sed -i 's|$AUTH0_CONNECTION_ID|${{ secrets.AUTH0_CONNECTION_ID_STAGING }}|g' app/scripts/modules/configurations.js
          sed -i 's|$AUTH0_AUDIENCE|${{ secrets.AUTH0_AUDIENCE_STAGING }}|g' app/scripts/modules/configurations.js
          sed -i 's|$FINERACT_BASE_URL|${{ secrets.FINERACT_BASE_URL_STAGING }}|g' app/scripts/modules/configurations.js
      # Set Prod Environment
      - name: Set Prod Environment
        if: github.ref == 'refs/heads/master'
        run: |
          echo 'CLOUD_ENV=prod' >> $GITHUB_ENV
          sed -i 's|$AUTH0_SERVER_URL|${{ secrets.AUTH0_SERVER_URL_PROD }}|g' app/scripts/modules/configurations.js
          sed -i 's|$AUTH0_CLIENT_ID|${{ secrets.AUTH0_CLIENT_ID_PROD }}|g' app/scripts/modules/configurations.js
          sed -i 's|$AUTH0_CONNECTION_ID|${{ secrets.AUTH0_CONNECTION_ID_PROD }}|g' app/scripts/modules/configurations.js
          sed -i 's|$AUTH0_AUDIENCE|${{ secrets.AUTH0_AUDIENCE_PROD }}|g' app/scripts/modules/configurations.js
          sed -i 's|$FINERACT_BASE_URL|${{ secrets.FINERACT_BASE_URL_PROD }}|g' app/scripts/modules/configurations.js
      - name: Set S3 Bucket Prefix
        run: echo 'AWS_S3_BUCKET=${{ env.STACK_NAME }}-mifos-${{ env.CLOUD_ENV }}' >> $GITHUB_ENV
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
      - name: Install Grunt and bower
        run: |
          npm install -g bower
          npm install -g grunt-cli
      - name: Install Dependecies Using bower
        run: |
          bower install
      - name: Install Node dependencies
        run: |
          npm install
      - name: Install Gem dependencies
        run: |
          gem install bundler
          bundle install 
          ls
      - name: Build code to deploy
        run: |
          grunt prod --force
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Deploy static site to S3 bucket
        run: aws s3 sync ./dist/community-app/ s3://${{ env.AWS_S3_BUCKET }} --delete
