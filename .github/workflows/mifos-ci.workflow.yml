name: Mifos CI

on:
  push:
    branches: [ master, staging, dev ]
  pull_request:
    branches: [ master, staging, dev ]
  workflow_dispatch:

jobs:
  build:
    name: CI
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      # Set Dev Environment
      - name: Set environment on pull_request
        if: github.event_name == 'pull_request'
        run: |
          echo 'CLOUD_ENV=dev' >> $GITHUB_ENV
          sed -i 's|$AUTH0_SERVER_URL|${{ secrets.AUTH0_SERVER_URL_DEV }}|g' app/scripts/modules/configurations.js
          sed -i 's|$AUTH0_CLIENT_ID|${{ secrets.AUTH0_CLIENT_ID_DEV }}|g' app/scripts/modules/configurations.js
          sed -i 's|$AUTH0_CONNECTION_ID|${{ secrets.AUTH0_CONNECTION_ID_DEV }}|g' app/scripts/modules/configurations.js
          sed -i 's|$AUTH0_AUDIENCE|${{ secrets.AUTH0_AUDIENCE_DEV }}|g' app/scripts/modules/configurations.js
          sed -i 's|$FINERACT_BASE_URL|${{ secrets.FINERACT_BASE_URL_DEV }}|g' app/scripts/modules/configurations.js
      # Set Dev Environment
      - name: Set Dev environment
        if: github.ref == 'refs/heads/dev'
        run: |
          echo 'CLOUD_ENV=dev' >> $GITHUB_ENV
          sed -i 's|$AUTH0_SERVER_URL|${{ secrets.AUTH0_SERVER_URL_DEV }}|g' app/scripts/modules/configurations.js
          sed -i 's|$AUTH0_CLIENT_ID|${{ secrets.AUTH0_CLIENT_ID_DEV }}|g' app/scripts/modules/configurations.js
          sed -i 's|$AUTH0_CONNECTION_ID|${{ secrets.AUTH0_CONNECTION_ID_DEV }}|g' app/scripts/modules/configurations.js
          sed -i 's|$AUTH0_AUDIENCE|${{ secrets.AUTH0_AUDIENCE_DEV }}|g' app/scripts/modules/configurations.js
          sed -i 's|$FINERACT_BASE_URL|${{ secrets.FINERACT_BASE_URL_DEV }}|g' app/scripts/modules/configurations.js
      # Set Staging Environment
      - name: Set Staging Environment
        if: github.ref == 'refs/heads/staging'
        run: |
          echo 'CLOUD_ENV=staging' >> $GITHUB_ENV
          sed -i 's|$AUTH0_SERVER_URL|${{ secrets.AUTH0_SERVER_URL_STAGING }}|g' app/scripts/modules/configurations.js
          sed -i 's|$AUTH0_CLIENT_ID|${{ secrets.AUTH0_CLIENT_ID_STAGING }}|g' app/scripts/modules/configurations.js
          sed -i 's|$AUTH0_CONNECTION_ID|${{ secrets.AUTH0_CONNECTION_ID_STAGING }}|g' app/scripts/modules/configurations.js
          sed -i 's|$AUTH0_AUDIENCE|${{ secrets.AUTH0_AUDIENCE_STAGING }}|g' app/scripts/modules/configurations.js
          sed -i 's|$FINERACT_BASE_URL|${{ secrets.FINERACT_BASE_URL_STAGING }}|g' app/scripts/modules/configurations.js
      # Set Prod Environment
      - name: Set Prod Environment
        if: github.ref == 'refs/heads/master'
        run: |
          echo 'CLOUD_ENV=prod' >> $GITHUB_ENV
          sed -i 's|$AUTH0_SERVER_URL|${{ secrets.AUTH0_SERVER_URL_PROD }}|g' app/scripts/modules/configurations.js
          sed -i 's|$AUTH0_CLIENT_ID|${{ secrets.AUTH0_CLIENT_ID_PROD }}|g' app/scripts/modules/configurations.js
          sed -i 's|$AUTH0_CONNECTION_ID|${{ secrets.AUTH0_CONNECTION_ID_PROD }}|g' app/scripts/modules/configurations.js
          sed -i 's|$AUTH0_AUDIENCE|${{ secrets.AUTH0_AUDIENCE_PROD }}|g' app/scripts/modules/configurations.js
          sed -i 's|$FINERACT_BASE_URL|${{ secrets.FINERACT_BASE_URL_PROD }}|g' app/scripts/modules/configurations.js
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
      - name: Install Grunt and bower
        run: |
          npm install -g bower
          npm install -g grunt-cli
      - name: Install Dependecies Using bower
        run: |
          bower install
      - name: Install Node dependencies
        run: |
          npm install --force
          npm install grunt-contrib-compass --save-dev
      - name: Install Gem dependencies
        run: |
          gem install bundler
          gem install compass
          bundle install
          ls
      - name: Build code to deploy
        run: |
          grunt prod --force
